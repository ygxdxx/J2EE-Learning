1.JS的BOM对象
    * BOM： Browser Object Model 浏览器对象模型
    * BOM组成：
        - navigator：获取浏览器的信息 appName
        - screen：获取屏幕信息
        - location：请求url地址
            * href可以获取和设置浏览器地址
        - history：请求url历史记录
            * back()：返回上一个页面
            * forward()：前进到下一个页面
            * go()：-1 ，1
        - window：窗口对象
            * 窗口对象，BOM操作都是在window中进行的
            * 属性：
                - opener：返回创建当前窗口的窗口对象
            * 方法：
                - alert()：警告框
                - confirm()：有返回值，可以进行确认
                - prompt("显示的内容","输入框里的默认值")：输入对话框
                - open("网页地址","窗口名称","窗口特性")：
                - close()：关闭浏览器，兼容性比较差
            * 定时器
                - setInterval("代码","毫秒数")：每隔多久就执行一次代码，会有一个返回值id
                - clearInterval(id)：interval函数返回的值
                - setTimeout("代码","毫秒数") 一段时间后执行一次代码 只执行一次，会有一个返回值id
                - clearTimeout(id)：timeout函数返回的值
2.JS的DOM对象
    * DOM：Document Object Model 文档对象模型
        - 文档：HTML XML
        - 对象：提供了属性和方法
        - 模型：使用属性和方法操作超文本标记型文档
    * 在操作之前要把HTML里面的所有属性、标签、文本内容都封装撑对象
    * 解析过程
        - 根据HTML的层次结构，在内存中分配一个树形结构，需要把HTML中的每部分都封装成对象
        - document对象：整个文档
        - element对象：标签对象
        - 属性对象
        - 文本对象
        ** Node对象是这些对象的父对象，提供一些上述对象不具备的方法
    * DHTML：多个技术的综合称呼
        - HTML：用于封装数据，提供网页结构
        - CSS：使用属性和属性值设置样式
        - DOM：操作标记性文档
        - JavaScript：专门指ECMAScript语法
    *document中的方法
        - write()：向网页中输出内容
        - getElementById()：通过id获取元素 -> value可以用于取值和赋值
        - getElementsByName()：通过name属性获取元素集合
        - getElementsByTagName()：通过tag标签名获取元素集合
        //TODO

